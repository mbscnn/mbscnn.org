<?xml version="1.0"?>
<doc>
<assembly>
<name>
DBUtility
</name>
</assembly>
<members>
<member name="T:com.Azion.NET.VB.BosParameter">
 <summary>
 
 </summary>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosParameter.#ctor(System.String,System.Object)">
 <summary> 
 ¨Ï¥Î«ü©wªºparameterName©MparameterValue¡Aªì©l¤Æ CmdParameter Ãþ§Oªº·s°õ¦æ­ÓÅé¡C
 </summary>
 <param name="name"></param>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="T:com.Azion.NET.VB.BosBase">
 <summary>
  The Business objects (BOS)¡C
 </summary>
 <remarks>
 Bosbase ¹ê§@IEnumerator¡BIEnumerable ¤¶­±
 ©Ò¦³¹ê§@³æµ§ Table Objectª«¥ó¶·Ä~©ÓBosbase¡C
 
 </remarks>
 <example> This sample shows how to inherits the Bosbase class based on EN_CASEMAIN which has the primary key
 <code>
 '½Ðª`·N©R¦W¤èªk 
 '----------------------------------------------
 '|Table Name  | BosBase     |  BosList         |
 '|------------| ------------|  ----------------|
 '|EN_CASEMAIN | EN_CASEMAIN |  EN_CASEMAINList |
 '----------------------------------------------
 Public Class EN_CASEMAIN Inherits Bosbase
     '«Øºc¤l
     Sub New()
          MyBase.New()
          Me.setPrimaryKeys()
     End Sub
     Sub New(ByVal dbManager As DatabaseManager)
         MyBase.new("EN_CASEMAIN", dbManager)
     End Sub
 
     'must Overrides Function newBos
     Overrides Function newBos() As BosBase
          Return New EN_CASEMAIN(MyBase.getDatabaseManager)
     End Function
     
     '®×¨Ò¤@:¤£¼gSQL»yªk¡Aª½±µµ¹°Ñ¼Æ
     '¤º³¡¹B§@»yªk:[select * from en_casemain where CaseID=sCaseID]
     Function loadByPK(ByVal sCaseID As String) As Integer
          Try
               If (Not IsNothing(sCaseID) AndAlso sCaseID.Length > 0) Then
                    Dim paras(0) As System.Data.IDbDataParameter
                    paras(0) = ProviderFactory.CreateDataParameter("CaseID", sCaseID)
                    Return MyBase.loadBySQL(paras)
               End If
          Catch ex As ProviderException
               Throw ex
          Catch ex As BosException
               Throw ex
          Catch ex As Exception
               Throw ex
          End Try
 
          Return 0
     End Function
 
     '®×¨Ò¤G:¼gSQL»yªk¡A¨Ãµ¹°Ñ¼Æ
     '¤º³¡¹B§@»yªk:[programmer µ¹ªºSQL = select * from en_casemain where CaseID=sCaseID]
     Function loadByPK(ByVal sCaseID As String) As Integer
          Try
               If (Not IsNothing(sCaseID) AndAlso sCaseID.Length > 0) Then
                    Dim sSQL As String="select * from en_casemain where CaseID" + ProviderFactory.PositionPara + "CaseID"
                    Dim paras(0) As System.Data.IDbDataParameter
                    paras(0) = ProviderFactory.CreateDataParameter("CaseID", sCaseID)
                    Return MyBase.loadBySQL(sSQL, paras)
               End If
          Catch ex As ProviderException
               Throw ex
          Catch ex As BosException
               Throw ex
          Catch ex As Exception
               Throw ex
          End Try
 
          Return 0
     End Function
 
    '®×¨Ò¤T:¼gJoin SQL»yªk¡A¨Ãµ¹°Ñ¼Æ
    '¤º³¡¹B§@»yªk:[programmer µ¹ªºSQL = select  a.caseid,a.brid,b.caseitemid caseitemid,b.loanitem ±Â«H¶µ¥Ø¦WºÙ,b.datadate ¸ê®Æ¤é´Á from En_Casemain a ,En_Casedetailcond  b where a.caseid=b.caseid and b.caseid=sCaseID and b.caseitemid=1]
    '¦pªG¬O¦h¦U¤£¦PTable Join¦b¤@°_®É¡A
    '¦b¦¹ª«¥ó(EN_CASEMAINList)¶·¤â°Ê¼W¥[Äæ¦ìÄÝ©Ê¡A¤~¥i¨ú±o¤£¦PTable(En_Casedetailcond)ªºÄæ¦ì(caseitemid¡Bloanitem¡Bdatadate)
     Function loadCaseItem(ByVal sCaseId As String) As Integer
          Try
               If (Not IsNothing(sCaseId) AndAlso sCaseId.Length > 0) Then
                    Dim sqlStr As String = ""
                    sqlStr = "select  a.caseid,a.brid,b.caseitemid caseitemid,b.loanitem ±Â«H¶µ¥Ø¦WºÙ,b.datadate ¸ê®Æ¤é´Á from En_Casemain a ,En_Casedetailcond  b where a.caseid=b.caseid " + _
                    " and CASEID=" + ProviderFactory.PositionPara + "CASEID and b.caseitemid=1 "
 
                    '¤U­±³o¤T­ÓÄæ¦ìÄÝ©óEn_Casedetailcondªº¡A¨Ã«DÄÝ©óEn_CaseMainªºÄæ¦ì
                    '¦]¦¹¶·±NEn_Casedetailcondªº¤T­ÓÄæ¦ì¤â°Ê¥[¤JEN_CASEMAINListªºª«¥ó¡A¦p¦¹¦¹¯à¨ú±o³o¤T¦UÄæ¦ìªº­È
                    Me.addAttribute("caseitemid", System.Data.DbType.Decimal)'¦pªG¸ê®Æ«¬§O¬ONumber-->System.Data.DbType.Decimal
                    Me.addAttribute("±Â«H¶µ¥Ø¦WºÙ", System.Data.DbType.String)'¦pªG¸ê®Æ«¬§O¬OString-->System.Data.DbType.String
                    Me.addAttribute("¸ê®Æ¤é´Á", System.Data.DbType.Date)'¦pªG¸ê®Æ«¬§O¬ODate-->System.Data.DbType.Date
 
                    Dim para As IDbDataParameter = ProviderFactory.CreateDataParameter("CASEID", sCaseId)
 
                    Return Me.loadBySQL(sqlStr, para)
               End If
          Catch ex As ProviderException
               Throw ex
          Catch ex As BosException
               Throw ex
          Catch ex As Exception
               Throw ex
          End Try
 
          Return 0
     End Function
 End Class
 </code>
 </example>
 <history>
 	[Titan]	2010/05/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetDataTable(System.String,System.Object[])">
 <summary>
 ±N¬d¸ßªº¸ê°T¼g¤J¦ÜDataTable¤º¡A¥ÑDataReaderÂà¤J¦ÜDataTable
 </summary>
 <param name="strSQL">­Y¬°NOTHING¡Aµ{¦¡·|¦Û¦æ²ÕSQL¦r¦ê</param>
 <param name="objs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetDataTable(System.String,com.Azion.NET.VB.BosParameter[],System.Data.CommandType)">
 <summary>
 ±N¬d¸ßªº¸ê°T¼g¤J¦ÜDataTable¤º¡A¥ÑDataReaderÂà¤J¦ÜDataTable
 </summary>
 <param name="strSQL">­Y¬°NOTHING¡Aµ{¦¡·|¦Û¦æ²ÕSQL¦r¦ê</param>
 <param name="parameters"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.InsertUpdate(com.Azion.NET.VB.BosParameter[])">
 <summary>
 ­Y¤w¦³°O¿ý¡A«h§ó·s°O¿ý¡C§_«h·s¼W°O¿ý¡C
 </summary>
 <param name="parameters"></param>
 <returns>¨ü¼vÅTªº¸ê®Æ¦C¼Æ¥Ø¡C</returns>
 <remarks>·|¥HPK¨Ó§PÂ_¬O§_¬O·s°O¿ýÁÙ¬OÂÂ°O¿ý</remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.InsertUpdate(System.String,com.Azion.NET.VB.BosParameter[])">
 <summary>
 ­Y¤w¦³°O¿ý¡A«h§ó·s°O¿ý¡C§_«h·s¼W°O¿ý¡C
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <returns>¨ü¼vÅTªº¸ê®Æ¦C¼Æ¥Ø¡C</returns>
 <remarks>·|¥HPK¨Ó§PÂ_¬O§_¬O·s°O¿ýÁÙ¬OÂÂ°O¿ý</remarks>
 <SAMPLE>
 </SAMPLE>
</member>
<member name="M:com.Azion.NET.VB.BosBase.Insert(System.Object[])">
 <summary>
 ·s¸ê¸ê®Æ
 </summary>
 <param name="objs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.Insert(System.String,com.Azion.NET.VB.BosParameter[])">
 <summary>
 ·s¼W°O¿ý
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <returns>¨ü¼vÅTªº¸ê®Æ¦C¼Æ¥Ø</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.Update(com.Azion.NET.VB.BosParameter[])">
 <summary>
 §ó·s°O¿ý¡C
 </summary>
 <param name="parameters"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.Update(System.String,com.Azion.NET.VB.BosParameter[])">
 <summary>
 §ó·s°O¿ý¡C
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <returns>¨ü¼vÅTªº¸ê®Æ¦C¼Æ¥Ø¡C</returns>
 <remarks></remarks>
 <SAMPLE>
 </SAMPLE>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetCount(com.Azion.NET.VB.BosParameter[])">
 <summary>
 ¨ú±o°O¿ýµ§¼Æ¡C
 </summary>
 <param name="parameters"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.Delete(com.Azion.NET.VB.BosParameter[])">
 <summary>
 §R°£°O¿ý
 </summary>
 <param name="parameters"></param>
 <returns>¨ü¼vÅTªº¸ê®Æ¦C¼Æ¥Ø</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.Delete(System.String,com.Azion.NET.VB.BosParameter[])">
 <summary>
 §R°£°O¿ý
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <returns>¨ü¼vÅTªº¸ê®Æ¦C¼Æ¥Ø</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetCount(System.String,com.Azion.NET.VB.BosParameter[])">
 <summary>
 ¨ú±o°O¿ýµ§¼Æ¡C
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <returns>¸ê®Æ¦C¼Æ¥Ø¡C</returns>
 <remarks></remarks>
 <SAMPLE>
 </SAMPLE>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetDataRowCollection(System.String,System.Object[])">
 <summary>
 ¨ú±oDataRowCollection¡C­Y¤£¬°NOTHING¡A«h¤@©w¦Ü¤Ö¦³¤@µ§¸ê®Æ
 </summary>
 <param name="strSQL">­Y¬°NOTHING¡Aµ{¦¡·|¦Û¦æ²ÕSQL¦r¦ê</param>
 <param name="objs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetDataRowCollection(System.String,com.Azion.NET.VB.BosParameter[],System.Data.CommandType)">
 <summary>
 ¨ú±oDataRowCollection¡C­Y¤£¬°NOTHING¡A«h¤@©w¦Ü¤Ö¦³¤@µ§¸ê®Æ
 </summary>
 <param name="strSQL">­Y¬°NOTHING¡Aµ{¦¡·|¦Û¦æ²ÕSQL¦r¦ê</param>
 <param name="parameters"></param>
 <param name="commandType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetDataRowCollection2(System.String,System.Object[])">
 <summary>
 ¨ú±oDataRowCollection¡C
 </summary>
 <param name="strSQL">­Y¬°NOTHING¡Aµ{¦¡·|¦Û¦æ²ÕSQL¦r¦ê</param>
 <param name="objs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetDataRowCollection2(System.String,com.Azion.NET.VB.BosParameter[],System.Data.CommandType)">
 <summary>
 ¨ú±oDataRowCollection¡C
 </summary>
 <param name="strSQL">­Y¬°NOTHING¡Aµ{¦¡·|¦Û¦æ²ÕSQL¦r¦ê</param>
 <param name="parameters"></param>
 <param name="commandType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetDataRow(System.String,System.Object[])">
 <summary>
 ¨ú±oDataRow¡C­Y¤£¬°NOTHING¡A«h¤@©w¦Ü¤Ö¦³¤@µ§¸ê®Æ
 </summary>
 <param name="strSQL">­Y¬°NOTHING¡Aµ{¦¡·|¦Û¦æ²ÕSQL¦r¦ê</param>
 <param name="objs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetDataRow(System.String,com.Azion.NET.VB.BosParameter[],System.Data.CommandType)">
 <summary>
 ¨ú±oDataRow¡C­Y¤£¬°NOTHING¡A«h¤@©w¥u¦³¤@µ§¸ê®Æ
 </summary>
 <param name="strSQL">­Y¬°NOTHING¡Aµ{¦¡·|¦Û¦æ²ÕSQL¦r¦ê</param>
 <param name="parameters"></param>
 <param name="commandType"></param>
 <returns>­Y¤£¬°NOTHING¡A«h¶Ç¦^¤@µ§¸ê®Æ</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.GetSQLStatement(System.String,com.Azion.NET.VB.BosParameter[])">
 <summary>
 ¨ú±oSQL»yªk
 </summary>
 <param name="strSQL"></param>
 <param name="parameters"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:com.Azion.NET.VB.BosBase.GetLastSQL">
 <summary>
 ¨ú±o³Ì«á°õ¦æªºSQL»yªk
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.CDbType``1(System.Object)">
 <summary>
 ±N±qDBÅª¥X¨Óªº¸ê®ÆÂà¦¨«ü©wªº¸ê®ÆÃþ§O¡A¦pªG¬OªÅªº¡A«hÂà¦¨NOTHING
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Expression"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.CDbType``1(System.Object,``0)">
 <summary>
 ±N±qDBÅª¥X¨Óªº¸ê®ÆÂà¦¨«ü©wªº¸ê®ÆÃþ§O¡A¦pªG¬OªÅªº¡A«hÂà¦¨¹w³]ªº­È(tDefault)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Expression"></param>
 <param name="tDefault"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.QueryString(System.String,System.Object[])">
 <summary>
 ±qDBÅª¥X¸ê®Æ¨ÃÂà¦¨¦r¦ê¡A¦pªG¬ODBNULL¡A«hÂà¦¨NOTHING
 </summary>
 <param name="strSQL_Field"></param>
 <param name="objs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.QueryValue``1(System.String,``0,System.Object[])">
 <summary>
 ±qDBÅª¥X¤@µ§¸ê®Æ¨ÃÂà¦¨«ü©wªº¸ê®ÆÃþ§O¡A¦pªG¬OªÅªº¡A«hÂà¦¨¹w³]ªº­È(DBNULLValue)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="strSQL_Field"></param>
 <param name="DBNULLValue"></param>
 <param name="objs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.QueryList``1(System.String,System.Object,System.Object[])">
 <summary>
 ±qDBÅª¥X¦hµ§¸ê®Æ¨ÃÂà¦¨«ü©wªº¸ê®ÆÃþ§O¡A¦pªG¬OªÅªº¡A«hÂà¦¨¹w³]ªº­È(DBNULLValue)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="strSQL_Field"></param>
 <param name="DBNULLValue"></param>
 <param name="objs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.QueryArray``1(System.String,System.Object,System.Object[])">
 <summary>
 ±qDBÅª¥X¦hµ§¸ê®Æ¨ÃÂà¦¨«ü©wªº¸ê®ÆÃþ§O¡A¦pªG¬OªÅªº¡A«hÂà¦¨¹w³]ªº­È(DBNULLValue)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="strSQL_Field"></param>
 <param name="DBNULLValue"></param>
 <param name="objs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_databaseManager">
 <summary>
 ³s½uª«¥ó
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_sTableName">
 <summary>
 Table Name
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_attributes">
 <summary>
 ¦s©ñ Column Name »P BosAttribute Object
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_bosAttributeList">
 <summary>
 ¦s©ñ BosAttribute Object
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_bIsLoaded">
 <summary>
 ª«¥ó¬O§_¸ü¤J
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_hashPrimaryKeys">
 <summary>
 ¦s©ñ PrimaryKey's Column Name »P value
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_arrayPrimaryKeys">
 <summary>
 ¦s©ñ PrimaryKey's Column Name
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_dataSet">
 <summary>
 Current DataSet
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_currentIndex">
 <summary>
 ¥Ø«e°O¿ýªº«ü¼Ð
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosBase.m_bloadPk">
 <summary>
 °O¿ýPK¬O§_¸ü¤J
 </summary>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.#ctor">
 <summary>
 ªì©l¤Æ BosBase Ãþ§Oªº·s°õ¦æ­ÓÅé (Instance)¡C
 </summary>
 <remarks>«Øºc¤l
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.#ctor(System.String,com.Azion.NET.VB.DatabaseManager)">
 <summary>
 ªì©l¤Æ BosBase Ãþ§Oªº·s°õ¦æ­ÓÅé (Instance)¡C
 </summary>
 <param name="sTableName">¶Ç¤JTable Name(¤j¼g)</param>
 <param name="databaseManager">¶Ç¤J DatabaseManager</param>
 <remarks>«Øºc¤l
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.loadBySQL(System.String)">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="sSQL">¶Ç¤JSQL»yªk¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ¡C</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.loadData(System.Data.IDataParameter[])">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="commandParameters">¶Ç¤JIDataParameter°}¦C¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ¡C</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.loadBySQL(System.Data.IDataParameter[])">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="commandParameters">¶Ç¤JIDataParameter°}¦C¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ¡C</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.loadBySQL(System.String,System.Data.IDataParameter[])">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="sSQL">¶Ç¤JSQL»yªk¡C</param>
 <param name="commandParameters">¶Ç¤JIDataParameter°}¦C¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setTableName(System.String)">
 <summary>
 ³]©wTable Name¡C
 </summary>
 <param name="sTableName">¶Ç¤JTable Name¡C</param> 
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getTableName">
 <summary>
 ¨ú±oTable Name¡C
 </summary>
 <returns>String ¶Ç¦^Table Name</returns>
 <remarks>
 EN_CASEMAIN
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getSchemaTableName">
 <summary>
 ¨ú±oSchema Table Name¡C
 </summary>
 <returns>String ¶Ç¦^Schema Table Name</returns>
 <remarks>
 BOTELOAN.EN_CASEMAIN
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getDataSet">
 <summary>
 ¨ú±oCurrent DataSet¡C
 </summary>
 <returns>DataSet ¶Ç¦^ª«¥ó Current DataSet</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setCurrentDataSet(System.Data.DataSet)">
 <summary>
 ³]©wCurrent DataSet¡C
 </summary>
 <param name="dataSet">¶Ç¤JDataSet¡C</param>
 <remarks>
 ±Nª«¥ó¥Ñmemory­«·s¸ü¤J
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setDatabaseManager(com.Azion.NET.VB.DatabaseManager)">
 <summary>
 ³]©wDatabaseManager Object¡C
 </summary>
 <param name="databaseManager">¶Ç¤JDatabaseManager¡C</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getDatabaseManager">
 <summary>
 ¨ú±oDatabaseManager¡CObject
 </summary>
 <returns>DatabaseManager ¶Ç¦^DatabaseManager</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setPrimaryKeys">
 <summary>
 ³]©w PrimaryKeys
 </summary>
 <remarks> 
 ¦pªGTable¨S¦³³]©wÄæ¦ì¡A¤@©w»Ý­nOverridable³o­ÓFunction¡A
 §_«h¦¹ª«¥óµL§@¥Î
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getArrayPrimaryKeys">
 <summary>
 get PrimaryKeys
 </summary>
 <returns>ArrayList ¦^¶ÇPrimaryKey's Column Name </returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getHashPrimaryKeys">
 <summary>
 get PrimaryKeys
 </summary>
 <returns>Hashtable ¦^¶ÇPrimaryKey's key and Value </returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setHashPrimaryKeys(System.Collections.Hashtable)">
 <summary>
 set Hash PrimaryKeys
 </summary>
 <param name="hashtable">¶Ç¤JPrimaryKey's key and Value (Hashtable)</param>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setIsLoaded(System.Boolean)">
 <summary>
 ³]©wª«¥ó¬O§_¸ü¤J
 </summary>
 <param name="bIsLoaded"></param>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.isLoaded">
 <summary>
 ¨ú±oª«¥ó¬O§_¸ü¤J
 </summary>
 <returns>Boolean True:¸ü¤J¡AFalse:µL¸ü¤J</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setAttribute(System.String,System.Object)">
 <summary>
 set value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <param name="value">Object ¶Ç¤JColumn's value</param>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getAttribute(System.String)">
 <summary>
 get value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <returns>Object Column's Value</returns>
 <remarks>¦^¶Ç¸ê®Æ®w«¬§O</remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setLong(System.String,System.Int64)">
 <summary>
 set Long value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <param name="iAttrValue">Long ¶Ç¤JColumn's value</param>
 <remarks>
 OleDb.OleDbType.BigInt 
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getLong(System.String)">
 <summary>
 get Long value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <returns>Long Column's Value</returns>
 <remarks>
 OleDb.OleDbType.BigInt
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setString(System.String,System.String)">
 <summary>
 set String value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <param name="sAttrValue">String ¶Ç¤JColumn's value</param>
 <remarks>
 OleDb.OleDbType.BSTR
 OleDb.OleDbType.Char
 OleDb.OleDbType.LongVarChar
 OleDb.OleDbType.LongVarWChar
 OleDb.OleDbType.VarChar
 OleDb.OleDbType.VarWChar
 OleDb.OleDbType.WChar
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getString(System.String)">
 <summary>
 set String value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <returns>String Column's Value</returns>
 <remarks>
 OleDb.OleDbType.BSTR
 OleDb.OleDbType.Char
 OleDb.OleDbType.LongVarChar
 OleDb.OleDbType.LongVarWChar
 OleDb.OleDbType.VarChar
 OleDb.OleDbType.VarWChar
 OleDb.OleDbType.WChar
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setInt(System.String,System.Int32)">
 <summary>
 set Integer value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <param name="iAttrValue">Integer ¶Ç¤JColumn's value</param>
 <remarks>
 OleDb.OleDbType.Integer  
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getInt(System.String)">
 <summary>
 get Integer value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <returns>Integer Column's Value</returns>
 <remarks>
 OleDb.OleDbType.Integer  
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setDecimal(System.String,System.Decimal)">
 <summary>
 set Decimal value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <param name="decAttrValue">Decimal ¶Ç¤JColumn's value</param>
 <remarks>
 OleDb.OleDbType.Numeric 
 OleDb.OleDbType.Decimal
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getDecimal(System.String)">
 <summary>
 get Decimal value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <returns>Decimal Column's Value</returns>
 <remarks>
 OleDb.OleDbType.Numeric 
 OleDb.OleDbType.Decimal
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setDateTime(System.String,System.DateTime)">
 <summary>
 set Date value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <param name="dAttrValue">DateTime ¶Ç¤JColumn's value</param>
 <remarks>
 OleDb.OleDbType.Date
 OleDb.OleDbType.DBDate
 OleDb.OleDbType.DBTimeStamp
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getDateTime(System.String)">
 <summary>
 get Date value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <returns>Date Column's Value</returns>
 <remarks>
 OleDb.OleDbType.Date
 OleDb.OleDbType.DBDate
 OleDb.OleDbType.DBTimeStamp
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setSmallInt(System.String,System.Int16)">
 <summary>
 set Int16 value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <param name="iAttrValue">Int16 ¶Ç¤JColumn's value</param>
 <remarks>
 OleDb.OleDbType.SmallInt
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.getSmallInt(System.String)">
 <summary>
 get Int16 value of Column
 </summary>
 <param name="sAttrName">String ¶Ç¤JColumn Name</param>
 <returns>Int16 Column's Value</returns>
 <remarks>
 OleDb.OleDbType.SmallInt
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.setAttMeta(System.String,System.Data.DbType)">
 <summary>
 ´£¨Ñ«D¦¹ BosBase ª«¥ó¤§¥[¸üÄæ¦ìÄÝ©Ê­È
 </summary>
 <param name="sColName">¶Ç¤JColumn Name</param>
 <param name="DBType">¶Ç¤JSystem.Data.DbType</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.addAttribute(com.Azion.NET.VB.BosAttribute)">
 <summary>
 ´£¨Ñ«D¦¹ BosBaseª«¥ó¤§¥[¸üÄæ¦ìÄÝ©Ê­È
 </summary>
 <param name="attr">¶Ç¤JBosAttribute</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.addAttribute(System.String,System.Data.DbType)">
 <summary>
 ´£¨Ñ«D¦¹ BosBase ª«¥ó¤§¥[¸üÄæ¦ìÄÝ©Ê­È
 </summary>
 <param name="sColName">¶Ç¤JColumn Name</param>
 <param name="DBType">¶Ç¤JSystem.Data.DbType</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history> 
</member>
<member name="M:com.Azion.NET.VB.BosBase.initMetaData(System.String)">
 <summary>
 ªì©l¤ÆMetaData
 </summary>
 <param name="sTableName">¶Ç¤J Table Name</param>
 <returns>Boolean MetaData¬O§_¸ü¤J</returns>
 <remarks>
 ¦pªG¦³¹w¥ý²£¥ýDBMeta.dll¡A«h±qDBMeta.dll¸ü¤J
 ¦pªG¨S¦³«hª½±µ±qDataBase¨ú±o
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.loadAttrMeta(com.Azion.NET.VB.DBMetaData)">
 <summary>
 ªì©l¤ÆMetaData
 </summary>
 <param name="dBMetaData">¶Ç¤J DBMetaData</param>
 <returns>Boolean MetaData¬O§_¸ü¤J</returns>
 <remarks>
 ¥ÑDBMeta.dll¸ü¤JMeta Data
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.loadAttrMeta(System.String)">
 <summary>
 ªì©l¤ÆMetaData
 </summary>
 <param name="sTableName">¶Ç¤J Table Name</param>
 <returns>Boolean MetaData¬O§_¸ü¤J</returns>
 <remarks>
 ª½±µ¥ÑDataBase¨ú±o
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosBase.ExecuteDataset(System.Data.CommandType,System.String,System.Data.IDataParameter[])">
 <summary>
 ExecuteDataset
 </summary>
 <param name="commandType">¶Ç¤JCommandType</param>
 <param name="commandText">¶Ç¤JcommandText</param>
 <param name="commandParameters">¶Ç¤JIDataParameter()</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.ExecuteNonQuery(System.Data.CommandType,System.String,System.Data.IDataParameter[])">
 <summary>
 ExecuteNonQuery
 </summary>
 <param name="commandType">¶Ç¤JCommandType</param>
 <param name="commandText">¶Ç¤JcommandText</param>
 <param name="commandParameters">¶Ç¤JIDataParameter()</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.ExecuteScalar(System.Data.CommandType,System.String,System.Data.IDataParameter[])">
 <summary>
 ExecuteScalar
 </summary>
 <param name="commandType">¶Ç¤JCommandType</param>
 <param name="commandText">¶Ç¤JcommandText</param>
 <param name="commandParameters">¶Ç¤JIDataParameter()</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.ExecuteReader(System.Data.CommandType,System.String,System.Data.IDataParameter[])">
 <summary>
 ExecuteReader
 </summary>
 <param name="commandType">¶Ç¤JCommandType</param>
 <param name="commandText">¶Ç¤JcommandText</param>
 <param name="commandParameters">¶Ç¤JIDataParameter()</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.showInsertSQL">
 <summary>
 Show Insert SQL¡C
 </summary> 
 <returns>String</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/02/25	modify
</history>
</member>
<member name="M:com.Azion.NET.VB.BosBase.showUpdateSQL">
 <summary>
 Show Update SQL¡C
 </summary> 
 <returns>String</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/02/25	modify
</history>
</member>
<member name="T:com.Azion.NET.VB.BosList">
 <summary>
  The List of the Business objects (BOS)¡C
 </summary>
 <remarks>
 BosList ¹ê§@IEnumerator¡BIEnumerable ¤¶­±
 ©Ò¦³¹ê§@¦hµ§ Table Objectª«¥ó¶·Ä~©ÓBosList¡C
 
 </remarks>
 <example> This sample shows how to inherits the BosList class based on EN_CASEMAIN which has the primary key
 <code>
 '½Ðª`·N©R¦W¤èªk 
 '----------------------------------------------
 '|Table Name  | BosBase     |  BosList         |
 '|------------| ------------|  ----------------|
 '|EN_CASEMAIN | EN_CASEMAIN |  EN_CASEMAINList |
 '----------------------------------------------
 Public Class EN_CASEMAINList Inherits BosList
     '«Øºc¤l
     Sub New(ByVal dbManager As DatabaseManager)
          MyBase.New("EN_CASEMAIN", dbManager)
     End Sub
 
     'must Overrides Function newBos
     Overrides Function newBos() As BosBase
          Return New EN_CASEMAIN(MyBase.getDatabaseManager)
     End Function
     
     '®×¨Ò¤@:¤£¼gSQL»yªk¡Aª½±µµ¹°Ñ¼Æ
     '¤º³¡¹B§@»yªk:[select * from en_casemain where GOBRID=sBrId]
     Function loadByBrIdEx1(ByVal sBrId As String) As Integer
          Try
               If (Not IsNothing(sBrId) AndAlso sBrId.Length > 0) Then
                    Dim paras(0) As System.Data.IDbDataParameter
                    paras(0) = ProviderFactory.CreateDataParameter("GOBRID", sBrId)
                    Return MyBase.loadBySQL(paras)
               End If
          Catch ex As ProviderException
               Throw ex
          Catch ex As BosException
               Throw ex
          Catch ex As Exception
               Throw ex
          End Try
 
          Return 0
     End Function
 
     '®×¨Ò¤G:¼gSQL»yªk¡A¨Ãµ¹°Ñ¼Æ
     '¤º³¡¹B§@»yªk:[programmer µ¹ªºSQL = select * from en_casemain where GOBRID=sBrId]
     Function loadByBrIdEx2(ByVal sBrId As String) As Integer
          Try
               If (Not IsNothing(sBrId) AndAlso sBrId.Length > 0) Then
                    Dim sSQL As String="select * from en_casemain where GOBRID" + ProviderFactory.PositionPara + "sBrId"
                    Dim paras(0) As System.Data.IDbDataParameter
                    paras(0) = ProviderFactory.CreateDataParameter("GOBRID", sBrId)
                    Return MyBase.loadBySQL(sSQL, paras)
               End If
          Catch ex As ProviderException
               Throw ex
          Catch ex As BosException
               Throw ex
          Catch ex As Exception
               Throw ex
          End Try
 
          Return 0
     End Function
 
    '®×¨Ò¤T:¼gJoin SQL»yªk¡A¨Ãµ¹°Ñ¼Æ
    '¤º³¡¹B§@»yªk:[programmer µ¹ªºSQL = select  a.caseid,a.brid,b.caseitemid caseitemid,b.loanitem ±Â«H¶µ¥Ø¦WºÙ,b.datadate ¸ê®Æ¤é´Á from En_Casemain a ,En_Casedetailcond  b where a.caseid=b.caseid and b.caseid=sCaseID]
    '¦pªG¬O¦h¦U¤£¦PTable Join¦b¤@°_®É¡A
    '¦b¦¹ª«¥ó(EN_CASEMAINList)¶·¤â°Ê¼W¥[Äæ¦ìÄÝ©Ê¡A¤~¥i¨ú±o¤£¦PTable(En_Casedetailcond)ªºÄæ¦ì(caseitemid¡Bloanitem¡Bdatadate)
     Function loadCaseItem(ByVal sCaseId As String) As Integer
          Try
               If (Not IsNothing(sCaseId) AndAlso sCaseId.Length > 0) Then
                    Dim sqlStr As String = ""
                    sqlStr = "select  a.caseid,a.brid,b.caseitemid caseitemid,b.loanitem ±Â«H¶µ¥Ø¦WºÙ,b.datadate ¸ê®Æ¤é´Á from En_Casemain a ,En_Casedetailcond  b where a.caseid=b.caseid " + _
                    " and CASEID=" + ProviderFactory.PositionPara + "CASEID "
 
                    '¤U­±³o¤T­ÓÄæ¦ìÄÝ©óEn_Casedetailcondªº¡A¨Ã«DÄÝ©óEn_CaseMainªºÄæ¦ì
                    '¦]¦¹¶·±NEn_Casedetailcondªº¤T­ÓÄæ¦ì¤â°Ê¥[¤JEN_CASEMAINListªºª«¥ó¡A¦p¦¹¦¹¯à¨ú±o³o¤T¦UÄæ¦ìªº­È
                    Me.addAttribute("caseitemid", System.Data.DbType.Decimal)'¦pªG¸ê®Æ«¬§O¬ONumber-->System.Data.DbType.Decimal
                    Me.addAttribute("±Â«H¶µ¥Ø¦WºÙ", System.Data.DbType.String)'¦pªG¸ê®Æ«¬§O¬OString-->System.Data.DbType.String
                    Me.addAttribute("¸ê®Æ¤é´Á", System.Data.DbType.Date)'¦pªG¸ê®Æ«¬§O¬ODate-->System.Data.DbType.Date
 
                    Dim para As IDbDataParameter = ProviderFactory.CreateDataParameter("CASEID", sCaseId)
 
                    Return Me.loadBySQL(sqlStr, para)
               End If
          Catch ex As ProviderException
               Throw ex
          Catch ex As BosException
               Throw ex
          Catch ex As Exception
               Throw ex
          End Try
 
          Return 0
     End Function
 End Class
 </code>
 </example>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="F:com.Azion.NET.VB.BosList.m_databaseManager">
 <summary>
 ³s½uª«¥ó
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosList.m_sTableName">
 <summary>
 Table Name
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosList.m_objects">
 <summary>
 ¦s©ñBosBaseª«¥ó°}¦C
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosList.m_BosAttrMetas">
 <summary>
 ¦s©ñBosAttrMetaÄæ¦ìª«¥ó°}¦C
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosList.m_sSQLCondition">
 <summary>
 ¨Ì»Ý¨D½Õ¾ãCondition
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosList.m_currentIndex">
 <summary>
 ¥Ø«e°O¿ýªº«ü¼Ð
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosList.m_dsCurrent">
 <summary>
 Current DataSet
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.BosList.m_sSQL">
 <summary>
 SQL script
 </summary>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.BosList.#ctor(System.String,com.Azion.NET.VB.DatabaseManager)">
 <summary>
 ªì©l¤Æ BosList Ãþ§Oªº·s°õ¦æ­ÓÅé (Instance)¡C
 </summary>
 <param name="sTableName">¶Ç¤JTable Name(¤j¼g)</param>
 <param name="databaseManager">¶Ç¤J DatabaseManager</param>
 <remarks>«Øºc¤l
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.loadAllData(System.Boolean)">
 <summary>
 ¨ú±o¬ÛÃöTableªº©Ò¦³°O¿ý¡C
 </summary>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ¡C</returns>
 <remarks>
 select * from [your TABLE_NAME]
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.loadBySQL(System.String)">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="sSQL">¶Ç¤JSQL»yªk¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ¡C</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.loadBySQL(System.Data.IDataParameter[])">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="commandParameters">¶Ç¤JIDataParameter°}¦C¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ¡C</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.loadBySQL(System.String,System.Data.IDataParameter[])">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="sSQL">¶Ç¤JSQL»yªk¡C</param>
 <param name="commandParameters">¶Ç¤JIDataParameter°}¦C¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.loadBySQLOnlyDs(System.String)">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="sSQL">¶Ç¤JSQL»yªk¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ¡C</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.loadBySQLOnlyDs(System.Data.IDataParameter[])">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="commandParameters">¶Ç¤JIDataParameter°}¦C¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ¡C</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.loadBySQLOnlyDs(System.String,System.Data.IDataParameter[])">
 <summary>
 ¨Ï¥ÎDataAdatpter.Fill(DataTable)¤èªk¡A¨úªº¬ÛÃöTableªº°O¿ý¡C
 </summary>
 <param name="sSQL">¶Ç¤JSQL»yªk¡C</param>
 <param name="commandParameters">¶Ç¤JIDataParameter°}¦C¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.constructBosData(System.Data.IDataReader)">
 <summary>
 ±N¦hµ§ª«¥ó¦^¥R¶ñ¦Ü³æµ§Bosª«¥ó(ªì©l¤Æ³æµ§ª«¥ó)¡C¤£²£¥ÍDataTable
 </summary>
 <param name="IReader">¶Ç¤JIDataReader¡C</param>
 <remarks>
 ¤j«¬ª«¥ó¡A¨«constructIRDData
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.ShowSelectSQL(System.String,System.Data.IDataParameter[])">
 <summary>
 °»¿ù®É¡AShow Select SQL¡C
 </summary>
 <param name="sSQL">¶Ç¤JSQL»yªk¡C</param>
 <param name="commandParameters">¶Ç¤JIDataParameter°}¦C¡C</param>
 <returns>String</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.newBos">
 <summary>
 ¨C­ÓÄ~©ÓBosListªºª«¥ó¡AMust Override this Function
 ±N¦hµ§ª«¥ó¦^¥R¶ñ¦Ü³æµ§Bosª«¥ó(ªì©l¤Æ³æµ§ª«¥ó)
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.BosList.setTableName(System.String)">
 <summary>
 ³]©wTable Name¡C
 </summary>
 <param name="sTableName">¶Ç¤JTable Name¡C</param> 
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.getTableName">
 <summary>
 ¨ú±oTable Name¡C
 </summary>
 <returns>String ¶Ç¦^Table Name</returns>
 <remarks>
 EN_CASEMAIN
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.getSchemaTableName">
 <summary>
 ¨ú±oSchema Table Name¡C
 </summary>
 <returns>String ¶Ç¦^Schema Table Name</returns>
 <remarks>
 BOTELOAN.EN_CASEMAIN
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.setDataTableName">
 <summary>
 ³]©wCurr DataTable's Name¡C
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.setCurrentDataSet(System.Data.DataSet)">
 <summary>
 ³]©wCurrent DataSet¡C
 </summary>
 <param name="dataSet">¶Ç¤JDataSet¡C</param>
 <remarks>
 ±Nª«¥ó¥Ñmemory­«·s¸ü¤J
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.getCurrentDataSet">
 <summary>
 ¨ú±oCurrent DataSet¡C
 </summary>
 <returns>DataSet ¶Ç¦^ª«¥ó Current DataSet</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.setDatabaseManager(com.Azion.NET.VB.DatabaseManager)">
 <summary>
 ³]©wDatabaseManager Object¡C
 </summary>
 <param name="databaseManager">¶Ç¤JDatabaseManager¡C</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.getDatabaseManager">
 <summary>
 ¨ú±oDatabaseManager¡CObject
 </summary>
 <returns>DatabaseManager ¶Ç¦^DatabaseManager</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.setSQLCondition(System.String)">
 <summary>
 ³]©wSQL Condition¡C
 </summary>
 <param name="sSQLCondition">¶Ç¤JSQL Condition¡C</param>
 <remarks>¦¹ª«¥ó¥i­«½Æ¨Ï¥Î
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.getSQLCondition">
 <summary>
 ¨ú±oSQL Condition¡C
 </summary>
 <returns>String ¶Ç¦^SQL Condition</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.GetEnumerator">
 <summary>
 ¶Ç¦^¥i³z¹L¶°¦X¨Ó­«½Æªº¦CÁ|­È¡C
 </summary>
 <remarks>¹ê§@IEnumerator¡BIEnumerable ¤¶­±¡C
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.Reset">
 <summary>
 ³]©w¦CÁ|­È¦Ü¥¦ªºªì©l¦ì¸m¡A³o¬O¦b¶°¦X¤¤²Ä¤@­Ó¤¸¯À¤§«e¡C
 </summary>
 <remarks>¹ê§@IEnumerator¡BIEnumerable ¤¶­±¡C
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.MoveNext">
 <summary>
 ±N¦CÁ|­È±À«e¦Ü¤U¤@­Ó¶°¦Xªº¤¸¯À¡C
 </summary>
 <remarks>¹ê§@IEnumerator¡BIEnumerable ¤¶­±¡C
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="P:com.Azion.NET.VB.BosList.Current">
 <summary>
 ¨ú±o¶°¦X¤¤¥Ø«eªº¶µ¥Ø¡C
 </summary>
 <remarks>¹ê§@IEnumerator¡BIEnumerable ¤¶­±¡C
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.constructIRDData(System.Data.IDataReader)">
 <summary>
 ±N¦hµ§ª«¥ó¦^¥R¶ñ¦Ü³æµ§Bosª«¥ó(ªì©l¤Æ³æµ§ª«¥ó)¡C
 </summary>
 <param name="IReader">¶Ç¤JIDataReader¡C</param>
 <remarks>
 ¤j«¬ª«¥ó¡A¨«constructIRDData
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.CreateDataColumns(System.Data.IDataReader)">
 <summary>
 ²£¥ÍDataTableªºÄæ¦ì
 </summary>
 <param name="IReader">¶Ç¤JIDataReader¡C</param>
 <returns>DataColumn()</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.constructData(System.Data.DataTable)">
 <summary>
 ±N¦hµ§ª«¥ó¦^¥R¶ñ¦Ü³æµ§Bosª«¥ó(ªì©l¤Æ³æµ§ª«¥ó)¡C
 </summary>
 <param name="dataTable">¶Ç¤JDataTable¡C</param>
 <remarks>
 ¥i¥H³QOverridable
 you can see EN_04_RPT_ATTACH04_ITEMList class¡C
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.ExecuteReader(com.Azion.NET.VB.DatabaseManager,System.Data.CommandType,System.String,System.Data.IDataParameter[])">
 <summary>
 ExecuteReader
 </summary>
 <param name="commandType">¶Ç¤JCommandType</param>
 <param name="commandText">¶Ç¤JcommandText</param>
 <param name="commandParameters">¶Ç¤JIDataParameter()</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.ExecuteDataset(System.Data.CommandType,System.String,System.Data.IDataParameter[])">
 <summary>
 ExecuteDataset
 </summary>
 <param name="commandType">¶Ç¤JCommandType</param>
 <param name="commandText">¶Ç¤JcommandText</param>
 <param name="commandParameters">¶Ç¤JIDataParameter()</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.addFields(com.Azion.NET.VB.BosBase)">
 <summary>
 ¥[¸üBos Object ªºÄæ¦ì¦WºÙ¡B­È¤Î¸ê®Æ«¬§Oµ¥ÄÝ©Ê­È
 </summary>
 <param name="bos">¶Ç¤JBosBase</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.addAttribute(com.Azion.NET.VB.BosAttrMeta)">
 <summary>
 ´£¨Ñ«D¦¹ BosList ª«¥ó¤§¥[¸üÄæ¦ìÄÝ©Ê­È¡A¦p®×¨Ò¤T
 </summary>
 <param name="attr">¶Ç¤JBosAttrMeta</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.addAttribute(System.String,System.Data.DbType)">
 <summary>
 ´£¨Ñ«D¦¹ BosList ª«¥ó¤§¥[¸üÄæ¦ìÄÝ©Ê­È¡A¦p®×¨Ò¤T
 </summary>
 <param name="sColName">¶Ç¤JColumn Name</param>
 <param name="DBType">¶Ç¤JSystem.Data.DbType</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.add(com.Azion.NET.VB.BosBase)">
 <summary>
 ¥[¸üBosList object
 </summary>
 <param name="bos">¶Ç¤JBosBase</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.remove(com.Azion.NET.VB.BosBase)">
 <summary>
 ²¾°£³æµ§BosList object
 </summary>
 <param name="bos">¶Ç¤JBosBase</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.clear">
 <summary>
 ²M°£©Ò¦³BosList object
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.item(System.Int32)">
 <summary>
 ¨ú±oBosList object
 </summary>
 <param name="index">¶Ç¤JInteger</param>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.size">
 <summary>
 ¨ú±oBosList object size
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.getSchemaName">
 <summary>
 ¨ú±oSchema Name(User ID)¡C
 </summary>
 <returns>String ¶Ç¦^Schema Table Name</returns>
 <remarks>
 BOTELOAN
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
</member>
<member name="M:com.Azion.NET.VB.BosList.loadReadeBySQL(System.String,System.Data.IDataParameter[])">
 <summary>
 This function will be removed from future Versions.Use another function 'loadReaderBySQL'
 </summary>
 <param name="sSQL">¶Ç¤JSQL»yªk¡C</param>
 <param name="commandParameters">¶Ç¤JIDataParameter°}¦C¡C</param>
 <returns>Integer ¶Ç¦^°O¿ýªºµ§¼Æ</returns>
 <remarks>
 </remarks>
 <history>
 	[Titan]	2009/01/20	modify
 </history>
 
</member>
<member name="M:com.Azion.NET.VB.FileUtil.getPathFilebyExet(System.String,System.String[],System.Boolean)">
 <summary>
 取得目錄下副檔名為特定格式的檔案
 </summary>
 <param name="sDirPath">起始目錄</param>
 <param name="sFileExtension">要尋找的副檔名</param>
 <param name="bRecursive">是否要尋找子目錄(預設值為不尋找子目錄)</param>
 <returns>List(Of FileInfo)</returns>
 <remarks></remarks>
 <permission></permission>
</member>
<member name="M:com.Azion.NET.VB.FileUtil.getPathFilebyNaming(System.String,System.String,System.Boolean)">
 <summary>
 取得目錄下相似的檔名檔案
 </summary>
 <param name="sDirPath">起始目錄</param>
 <param name="sNaming">要尋找的副檔名</param>
 <param name="bRecursive">是否要尋找子目錄(預設值為不尋找子目錄)</param>
 <returns>List(Of FileInfo)</returns>
 <remarks></remarks>
 <permission></permission>
</member>
<member name="T:com.Azion.NET.VB.TinyDb.DbTable">
 <summary>
 簡易的資料庫存取 
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.InsertUpdate(com.Azion.NET.VB.TinyDb.CmdParameter[],System.Boolean)">
 <summary>
 若已有記錄，則更新記錄。否則新增記錄。
 </summary>
 <param name="parameters"></param>
 <param name="deferredExecute">
 要排入佇列時，將deferredExecute設為TRUE
 要執行所有的SQL時，將deferredExecute設為FALSE
 </param>
 <returns>受影響的資料列數目。</returns>
 <remarks>會以PK來判斷是否是新記錄還是舊記錄</remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.InsertUpdate(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Boolean)">
 <summary>
 若已有記錄，則更新記錄。否則新增記錄。
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <param name="deferredExecute">延後處理，可一次處理多個SQL語法，
 要排入佇列時，將deferredExecute設為TRUE
 要執行所有的SQL時，將deferredExecute設為FALSE
 </param>
 <returns>受影響的資料列數目。</returns>
 <remarks>會以PK來判斷是否是新記錄還是舊記錄</remarks>
 <SAMPLE>
 </SAMPLE>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.Insert(com.Azion.NET.VB.TinyDb.CmdParameter[],System.Boolean)">
 <summary>
 新增記錄
 </summary>
 <param name="parameters"></param>
 <param name="deferredExecute"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.Insert(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Boolean)">
 <summary>
 新增記錄
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <param name="deferredExecute">延後處理，可一次處理多個SQL語法，
 要排入佇列時，將deferredExecute設為TRUE
 要執行所有的SQL時，將deferredExecute設為FALSE
 </param>
 <returns>受影響的資料列數目</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.Update(com.Azion.NET.VB.TinyDb.CmdParameter[],System.Boolean)">
 <summary>
 更新記錄。
 </summary>
 <param name="parameters"></param>
 <param name="deferredExecute"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.Update(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Boolean)">
 <summary>
 更新記錄。
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <param name="deferredExecute">延後處理，可一次處理多個SQL語法，
 要排入佇列時，將deferredExecute設為TRUE
 要執行所有的SQL時，將deferredExecute設為FALSE
 </param>
 <returns>受影響的資料列數目。</returns>
 <remarks></remarks>
 <SAMPLE>
 </SAMPLE>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.GetCount(com.Azion.NET.VB.TinyDb.CmdParameter[])">
 <summary>
 取得記錄筆數。
 </summary>
 <param name="parameters"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.Delete(com.Azion.NET.VB.TinyDb.CmdParameter[],System.Boolean)">
 <summary>
 刪除記錄
 </summary>
 <param name="parameters"></param>
 <param name="deferredExecute">延後處理，可一次處理多個SQL語法，
 要排入佇列時，將deferredExecute設為TRUE
 要執行所有的SQL時，將deferredExecute設為FALSE
 </param>
 <returns>受影響的資料列數目</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.Delete(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Boolean)">
 <summary>
 刪除記錄
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <param name="deferredExecute">延後處理，可一次處理多個SQL語法，
 要排入佇列時，將deferredExecute設為TRUE
 要執行所有的SQL時，將deferredExecute設為FALSE
 </param>
 <returns>受影響的資料列數目</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.GetCount(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[])">
 <summary>
 取得記錄筆數。
 </summary>
 <param name="tableName"></param>
 <param name="parameters"></param>
 <returns>資料列數目。</returns>
 <remarks></remarks>
 <SAMPLE>
 </SAMPLE>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.GetDataRowCollection(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Data.CommandType)">
 <summary>
 取得DataRowCollection。若不為NOTHING，則一定至少有一筆資料
 </summary>
 <param name="strSQL"></param>
 <param name="parameters"></param>
 <param name="commandType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.GetDataRow(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Data.CommandType)">
 <summary>
 取得DataRow。若不為NOTHING，則一定只有一筆資料
 </summary>
 <param name="strSQL"></param>
 <param name="parameters"></param>
 <param name="commandType"></param>
 <returns>若不為NOTHING，則傳回一筆資料</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.ExecuteDeferedSql">
 <summary>
 立即執行所有延後執行的SQL命令
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.ClearDeferedSql">
 <summary>
 清除所有延後執行的SQL命令
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.TinyDb.DbTable.m_strTableName">
 <summary>
 TABLE的名稱
 </summary>
 <remarks></remarks>
</member>
<member name="F:com.Azion.NET.VB.TinyDb.DbTable.strDebugBreak">
 <summary>
 當搜尋到指字串時，中斷執行 
 </summary>
 strDebugBreak(0) = "Update FlowStep S003835"
 strDebugBreak(1) = "Insert FlowStep S003835"
 當更新或新增至FLOWSTEP內的記錄有S003835的員編就中斷
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.ExecuteReader(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Data.CommandType)">
 <summary>
 執行查詢，並傳回DataReader
 </summary>
 <param name="strSQL"></param>
 <param name="parameters"></param>
 <param name="commandType"></param>
 <returns>傳回IDataReader，需自行釋放傳回的IDataReader物件 (IDataReader.Dispose())</returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.GetDataTable(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Data.CommandType)">
 <summary>
 將查詢的資訊寫入至DataTable內，由DataReader轉入至DataTable
 </summary>
 <param name="strSQL"></param>
 <param name="parameters"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.ExecuteScalar(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Data.CommandType)">
 <summary>
 執行查詢，並傳回查詢所傳回的結果集第一個資料列的第一個資料行。會忽略其他的資料行或資料列。
 </summary>
 <param name="strSQL"></param>
 <param name="parameters"></param>
 <param name="commandType"></param>
 <returns>結果集中第一個資料列的第一個資料行；如果結果集是空的，則為 null 參考 (在 Visual Basic 中為 Nothing)。最多傳回 2033 個字元。</returns>
 <remarks></remarks>
 <sample>
 '是否是管理單位
 '如果是管理單位，則可以設定所有人的密碼
 Dim dbTable As New DbTable(dbManager.getConnection)
 Dim objInt As Integer
 objInt = dbTable.ExecuteScalar( _
      "SELECT Count(*) from ROLEGROUP_GRANT_BRID where BRID = @BRID@", _
      New CmdParameter() {New CmdParameter("BRID", Session("BRID"))})
 
 If (objInt = 0) Then
      '不是管理單位
 Else
      '是管理單位
 End If        ''' 
 </sample>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.DbTable.ExecuteNonQuery(System.String,com.Azion.NET.VB.TinyDb.CmdParameter[],System.Data.CommandType,System.Boolean)">
 <summary>
 針對連接執行陳述式，並傳回受影響的資料列數目。
 </summary>
 <param name="strSQL"></param>
 <param name="parameters"></param>
 <param name="commandType"></param>
 <param name="deferredExecute"></param>
 <returns>受影響的資料列數目。</returns>
 <remarks></remarks>
 <SAMPLE>
 Dim table as new DbTable(dbManager.getConnection)
 
 table.ExecuteNonQuert ("Delete from user where USERID = @USERID@ AND USERNAME = @USERNAME@", 
                         New CmdParameter(){ New CmdParameter("USERID","S123456"),
                                             New CmdParameter("USERNAME","S234567")   })
 </SAMPLE>
</member>
<member name="T:com.Azion.NET.VB.TinyDb.CmdParameter">
 <summary>
 
 </summary>
 <remarks></remarks>
</member>
<member name="M:com.Azion.NET.VB.TinyDb.CmdParameter.#ctor(System.String,System.Object,System.Boolean)">
 <summary>
 使用指定的parameterName和parameterValue，初始化 CmdParameter 類別的新執行個體。
 </summary>
 <param name="name"></param>
 <param name="value"></param>
 <param name="isPK">
 可不填,isPK是InsertUpdate()及Update()時使用在判斷哪些筆記錄需更新。
 若設為TRUE，InsertUpdate()及Update()內組SQL語法時會將isPK=TRUE的參數加入至 [WHERE] 條件後。
 例如，將STAFFID="S123456"記錄的USERNAME設為"S234567"
 dbTable.Update("USERINFO", New CmdParameter(){ New CmdParameter("STAFFID","S123456", True),
                                                New CmdParameter("USERNAME","S234567")   });
 Update()會重組SQL語法為
 Update USERINFO SET USERNAME="S234567" Where STAFFID="S123456"; 
 
 STAFFID是Where後的條件之一，因此要將isPK設為1
 </param>
 <remarks></remarks>
</member>
</members>
</doc>
